{"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AAGO,SAAS;IACZ,MAAM,QAAQ,CAAA,GAAA,qCAAG,EAAE,KAAK,CAAC,OAAO,CAAC;IACjC,IAAI,cAAc,EAAE;IACpB,IAAI,aAAa,EAAE,EAAE,0CAA0C;IAE/D,wBAAwB;IACxB,MAAM,YAAY,KAAK,KAAK,CAAC,eAAe,OAAO,CAAC,iBAAiB,EAAE;IAEvE,yDAAyD;IACzD,MAAM,OAAO,CAAC,CAAC,MAAM;QACjB,IAAI,YAAY,gBAAgB;QAChC,YAAY,IAAI,CAAC;QACjB,UAAU,CAAC,MAAM,GAAG,UAAU,QAAQ,CAAC,QAAQ,oBAAoB;QAEnE,+DAA+D;QAC/D,IAAI,aAAa,KAAK,aAAa,CAAC;QACpC,IAAI,YACA,WAAW,gBAAgB,CAAC,SAAS,IAAM,WAAW,WAAW;QAGrE,yBAAyB;QACzB,IAAI,UAAU,CAAC,MAAM,EACjB,UAAU,IAAI,CAAC;IAEvB;IAEA,SAAS,WAAW,SAAS,EAAE,KAAK;QAChC,IAAI,UAAU,CAAC,MAAM,EAAE;YACnB,UAAU,OAAO,IAAI,iBAAiB;YACtC,UAAU,CAAC,MAAM,GAAG;YACpB,kBAAkB,OAAO;QAC7B,OAAO;YACH,UAAU,IAAI,IAAI,gBAAgB;YAClC,UAAU,CAAC,MAAM,GAAG;YACpB,kBAAkB,OAAO;QAC7B;IACJ;IAEA,SAAS,kBAAkB,KAAK,EAAE,MAAM;QACpC,IAAI,YAAY,KAAK,KAAK,CAAC,eAAe,OAAO,CAAC,iBAAiB,EAAE;QAErE,IAAI,QACA;YAAA,IAAI,CAAC,UAAU,QAAQ,CAAC,QACpB,UAAU,IAAI,CAAC;QACnB,OAEA,YAAY,UAAU,MAAM,CAAC,CAAC,IAAM,MAAM;QAG9C,eAAe,OAAO,CAAC,aAAa,KAAK,SAAS,CAAC;IACvD;IAEA,SAAS,gBAAgB,IAAI;QACzB,IAAI,MAAM,KAAK,aAAa,CAAC;QAC7B,IAAI,WAAW,KAAK,aAAa,CAAC;QAElC,CAAA,GAAA,qCAAG,EAAE,GAAG,CAAC,KAAK;YAAE,QAAQ;QAAO;QAE/B,IAAI,WAAW,CAAA,GAAA,qCAAG,EACb,QAAQ,CAAC;YAAE,QAAQ;QAAK,GACxB,IAAI,CAAC,KAAK;YAAE,QAAQ;YAAG,UAAU;YAAK,MAAM;QAAe,GAC3D,EAAE,CACC,UACA;YAAE,QAAQ;YAAQ,UAAU;YAAK,MAAM;QAAe,GACtD,KAEH,OAAO;QAEZ,OAAO;IACX;AACJ","sources":["src/modules/docSidenav.js"],"sourcesContent":["import gsap from \"gsap\";\n\n// Initialize the side navigation\nexport function initDocSideNav() {\n    const menus = gsap.utils.toArray(\".ep-doc-dropdown\");\n    let menuToggles = [];\n    let menuStates = []; // Global array to track open/close states\n\n    // Retrieve session data\n    const openMenus = JSON.parse(sessionStorage.getItem(\"openMenus\")) || [];\n\n    // Create animations for each menu and restore open state\n    menus.forEach((menu, index) => {\n        let animation = createAnimation(menu);\n        menuToggles.push(animation);\n        menuStates[index] = openMenus.includes(index); // Set initial state\n\n        // Add click listener to the .ep-doc-nav-title inside each menu\n        let triggerFaq = menu.querySelector(\".ep-doc-nav-title\");\n        if (triggerFaq) {\n            triggerFaq.addEventListener(\"click\", () => toggleMenu(animation, index));\n        }\n\n        // Restore the open state\n        if (menuStates[index]) {\n            animation.play(0);\n        }\n    });\n\n    function toggleMenu(animation, index) {\n        if (menuStates[index]) {\n            animation.reverse(); // Close the menu\n            menuStates[index] = false;\n            updateSessionData(index, false);\n        } else {\n            animation.play(); // Open the menu\n            menuStates[index] = true;\n            updateSessionData(index, true);\n        }\n    }\n\n    function updateSessionData(index, isOpen) {\n        let openMenus = JSON.parse(sessionStorage.getItem(\"openMenus\")) || [];\n\n        if (isOpen) {\n            if (!openMenus.includes(index)) {\n                openMenus.push(index);\n            }\n        } else {\n            openMenus = openMenus.filter((i) => i !== index);\n        }\n\n        sessionStorage.setItem(\"openMenus\", JSON.stringify(openMenus));\n    }\n\n    function createAnimation(menu) {\n        let box = menu.querySelector(\".ep-doc-list\");\n        let plusSign = menu.querySelector(\".ep-side-box-icon\");\n\n        gsap.set(box, { height: \"auto\" });\n\n        let timeline = gsap\n            .timeline({ paused: true })\n            .from(box, { height: 0, duration: 0.5, ease: \"power1.inOut\" })\n            .to(\n                plusSign,\n                { rotate: \"0deg\", duration: 0.2, ease: \"power4.inOut\" },\n                \"<\"\n            )\n            .reverse();\n\n        return timeline;\n    }\n}"],"names":[],"version":3,"file":"docSidenav.be2cde56.js.map"}